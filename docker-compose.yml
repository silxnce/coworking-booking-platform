version: '3.8'

services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: mydb
    ports:
      - "5432:5432"
    volumes:
      - ./pg_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "8080:80" # http://localhost:8080
    volumes:
      - ./pgadmin_data:/var/lib/pgadmin
    depends_on:
      postgres:
        condition: service_healthy
    tty: false

  rabbitmq:
    image: rabbitmq:3-management
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 15s

  api-gateway:
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    container_name: api-gateway
    working_dir: /usr/src/app
    ports:
      - "3000:3000" # Swagger: http://localhost:3000/api
    environment:
      NODE_ENV: development
      RABBITMQ_URL: amqp://guest:guest@rabbitmq:5672
    depends_on:
      rabbitmq:
        condition: service_healthy
    command: npm run start:dev
    tty: true

    develop:
      watch:
        - action: sync
          path: ./api-gateway
          target: /usr/src/app
          ignore:
            - node_modules/
        - action: rebuild
          path: ./api-gateway/package.json

  user-service:
    build:
      context: ./user-service
      dockerfile: Dockerfile
    container_name: user-service
    working_dir: /usr/src/app
    ports:
      - "3001:3001"
    environment:
      NODE_ENV: development
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_NAME: mydb
      RABBITMQ_URL: amqp://guest:guest@rabbitmq:5672
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    command: npm run start:dev
    tty: true

    develop:
      watch:
        - action: sync
          path: ./user-service
          target: /usr/src/app
          ignore:
            - node_modules/
        - action: rebuild
          path: ./user-service/package.json

  room-service:
    build:
      context: ./room-service
      dockerfile: Dockerfile
    container_name: room-service
    working_dir: /usr/src/app
    ports:
      - "3002:3002"
    environment:
      NODE_ENV: development
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_NAME: mydb
      RABBITMQ_URL: amqp://guest:guest@rabbitmq:5672
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    command: npm run start:dev
    tty: true

    develop:
      watch:
        - action: sync
          path: ./room-service
          target: /usr/src/app
          ignore:
            - node_modules/
        - action: rebuild
          path: ./room-service/package.json

  booking-service:
    build:
      context: ./booking-service
      dockerfile: Dockerfile
    container_name: booking-service
    working_dir: /usr/src/app
    ports:
      - "3003:3003"
    environment:
      NODE_ENV: development
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_NAME: mydb
      RABBITMQ_URL: amqp://guest:guest@rabbitmq:5672
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    command: npm run start:dev
    tty: true

    develop:
      watch:
        - action: sync
          path: ./booking-service
          target: /usr/src/app
          ignore:
            - node_modules/
        - action: rebuild
          path: ./booking-service/package.json
